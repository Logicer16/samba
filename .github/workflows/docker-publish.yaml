name: Docker

on:
  push:
    branches: ["master"]
  workflow_dispatch:
  workflow_call:

env:
  REGISTRY_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        target: ["latest", "exporter"]
        platform: ["linux/amd64", "linux/arm64", "linux/arm/v6", "linux/arm/v7"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=raw,${{ matrix.target }}
            type=sha,enable=true,priority=100,prefix=${{ matrix.target }}-,suffix=,format=short

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Setup Go Build Cache for Docker
        if: ${{ matrix.target == 'exporter' }}
        uses: actions/cache@v4
        with:
          path: go-build-cache
          key: ${{ matrix.platform }}-go-build-cache

      - name: Inject go-build-cache into Docker
        if: ${{ matrix.target == 'exporter' }}
        uses: reproducible-containers/buildkit-cache-dance@v2
        with:
          cache-source: go-build-cache

      - name: Build
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          push: false
          file: ./Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: IMAGE_TARGET=${{ matrix.target }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
          sbom: true

      - name: Export Digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload Digest
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}-digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        target: ["latest", "exporter"]
    steps:
      - name: Download Digests
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.target }}-digests
          path: /tmp/digests

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=raw,${{ matrix.target }}
            type=sha,enable=true,priority=100,prefix=${{ matrix.target }}-,suffix=,format=short

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Manifest List and Push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
          
      - name: Push Image to GHCR
        run: |
          docker buildx imagetools create \
            --tag ghcr.io/${{ env.REGISTRY_IMAGE }}:${{ matrix.target }} \
            ${{ env.REGISTRY_IMAGE }}:${{ matrix.target }}

      - name: Inspect Image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ matrix.target }}

  dockerhub-description:
    runs-on: ubuntu-latest
    needs:
      - merge
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Update Repo Description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}
          short-description: ${{ github.event.repository.description }}
